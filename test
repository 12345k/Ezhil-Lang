#!/bin/bash
if [ -e success.txt ];
then
    rm success.txt
fi
if [ -e failed.txt ];
then
    rm failed.txt
fi

touch success.txt
touch failed.txt
## run all the success programs
for i in `ls ./tests/*.prog | sort`;
do
    echo "Testing file", $i
    python ./ezhil/exprs.py $i $1
    if [ $? -eq 0 ]
    then
	echo $i >> success.txt
    else
	echo $i >> failed.txt
    fi
    sleep 0
done

# run tests for Ezhil as well
cd ./ezhil_tests
for i in `echo oklex.n badlex.n hello.n fact.n ranges.n gcd.n printtest.n vannakm.n temple.n lex2.n\
 ifchain.n fern.n கூட்டு.n strings.n tables.n calc_asmd.n list.n \
string_demo.n list_ta.n yinyang.n unaryop.n boolean.n chaos.n \
prime.n array1.n array2.n filedemo.n filerw.n reverse.n friends.n  \
palindromes.n ford2.n trials.n fornested.n loopupdate.n foreach.n foriter.n \
dowhile.n select_case2.n magic_coins.n rich_poor.n peanut_candy.n logical_not.n \
binary.n fibo.n floatpthole.n ifnested.n hailstone.n split_text.n lcmgcd.n \
windoze.n convert2kelvin.n dict.n speedoflight.n tictok.n \
change.n solo_return.n listmt.n predicates.n sexpr.n dict_ta.n \
fruity.n optional.n sine_qua_non.n armstrong.n array0.n array_nd.n \
tamil_letters.n tamil_months.n tower_of_hanoi.n hanoi.n \
max_wo_compare.n powers_of_two.n sum_of_digits.n bmi.n isbalanced.n mangalyaan.n \
neuron.n varavu_selavu.n calc2.n name_var.n py1.n demoif.n | sort`
do
    echo "Testing Ezhil script","python ../ezhil/ezhil.py $i $1"    
    python ../ezhil/ezhil.py  $i $1
    if [ $? -eq 0 ]
    then
       echo $i >> ../success.txt
    else
       echo $i >> ../failed.txt
    fi
    sleep 0
done

if [ -e names.txt ];
then
    rm names.txt
fi

cd ../

echo "**************************************************"
echo " Running Web tests"
echo "**************************************************"

# this test needs Ezhil to be installed via pip
python ./web/ezhil_web.py 
if [ $? -eq 0 ]
then
    echo "ezhil_web.py" >> success.txt
else
    echo "ezhil_web.py" >> failed.txt
fi

echo "**************************************************"
echo " Running all the failure programs, that must fail."
echo "**************************************************"
sleep 2
for i in `ls ./tests/*.fprog`;
do
    echo "Testing file", $i
    python ./ezhil/exprs.py $i $1
    if [ $? -eq 0 ]
    then
	echo $i >> failed.txt
    else
	echo $i >> success.txt
    fi
    sleep 0
done

echo "**********Successful Tests**********" 
cat success.txt
echo "*************************************"
echo "***********Failed Tests**************" 
cat failed.txt

echo "***********Summary******************"
echo "Passed = "`wc -l success.txt`", Failed = "`wc -l failed.txt`

# number of failures is always limited, and when you add
# failed tests you have to bump this up.

NFAIL=7 #02/06/15
TOTFAIL=`wc -l failed.txt | cut -d'f' -f1`
echo "from sys import exit; ( $TOTFAIL <=  $NFAIL ) and exit(0) or exit(255)" | python
if [ $?  -eq 0 ]
then
   echo "Expected failures"
   exitcode=0 # success
else
   echo "Expecting $NFAIL failures, but found $TOTFAIL failures"
   echo "Too few/many failures; some negative tests may have failed"
   echo ""
   echo "######### LIST OF FAILED FILES ##############"
   cat failed.txt
   echo " "
   exitcode=255 #failed failures != $NFAIL
   exit $exitcode
fi

# cleanup
rm failed.txt
rm success.txt
exit $exitcode
