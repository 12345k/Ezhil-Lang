#!/bin/bash
# Tests for Ezhil language
# (C) 2007, 2008, 2013-2016 முத்தையா அண்ணாமலை
MODEZHIL=`pwd`
if [ -e success.txt ];
then
    rm success.txt
fi
if [ -e failed.txt ];
then
    rm failed.txt
fi
if [ -e dump_file ];
then
    rm dump_file
fi

echo "" > success.txt
echo "" > failed.txt
echo "" > dump_file

## run all the success programs
for i in `ls ./tests/exprs/*.prog | sort`;
do
    RVAL="NA"
    python exprs.py $i 2>&1 >> dump_file
    if [ $? -eq 0 ]
    then
        RVAL="OK"
        echo $i >> success.txt
    else
        RVAL="FAIL"
        echo $i >> failed.txt
    fi
    echo "########## Testing file $i -> $RVAL" | tee -a dump_file
    sleep 0
done

# run tests for Ezhil as well
export EZHIL_DATA_PATH=`pwd`/tests/data
export EZHIL_TEST_PATH=`pwd`/tests/
cd ./tests
echo $MODEZHIL is source location of EZHIL MODULE
for i in `cat ../test_cases | sort`
do
    RESULT="NA"
    PYTHONPATH=$MODEZHIL python -m ezhil  $i 2>&1
    if [ $? -eq 0 ]
    then
       RESULT="OK"
       echo $i >> ../success.txt
    else
       RESULT="FAIL"
       echo $i >> ../failed.txt
    fi
    echo "########## Testing Ezhil script $i -> $RESULT"
    sleep 0
done
unset EZHIL_DATA_PATH

echo "**********Special TSCII Test**********"
    PYTHONPATH=$MODEZHIL python -m ezhil  -tamilencoding tscii  tscii_calc2.n |  tee -a ../dump_file
	if [ $? -eq 0 ]
	then
	    echo "tscii_calc2.n" >> ../success.txt
	else
	    echo "tscii_calc2.n" >> ../failed.txt
	fi
echo "********************************************"

if [ -e names.txt ];
then
    rm names.txt
fi

cd ../

echo "**************************************************"
echo " Running Web tests" | tee -a dump_file
echo "**************************************************"
# this test needs Ezhil to be installed via pip
python ./web/ezhil_web.py 2>&1 >> dump_file
if [ $? -eq 0 ]
then
    echo "ezhil_web.py" >> success.txt
else
    echo "ezhil_web.py" >> failed.txt
fi

echo "**************************************************"
echo " Running API tests"
echo "**************************************************"

cd web/ulle_veliye/
pip install -r requirements.txt
python manage.py test

cd -

echo "**************************************************"
echo " Running interactive tests " | tee -a dump_file
echo "***************************************************"
for i in `echo demos/ch2.n \
`
do
    echo "'ezhil'" | PYTHONPATH=$MODEZHIL python -m ezhil ./tests/$i  >>  dump_file
    if [ $? -eq 0 ]
    then
        echo "passed ezhil interactive test for  $i" >> success.txt
    else
        echo "failed ezhil interactive test for $i" >> failed.txt
    fi
done

echo "**************************************************"
echo " Running all the failure programs, that must fail."
echo "**************************************************"
for i in `ls ./tests/*.fprog ./tests/typecheck/semantic_error*.n`;
do
    echo "Testing file $i" | tee -a dump_file
    PYTHONPATH=$MODEZHIL python exprs.py $i -stacksize 10 2>&1 >> dump_file
    if [ $? -eq 0 ]
    then
	echo $i >> failed.txt
    else
	echo $i >> success.txt
    fi
    sleep 0
done


echo "**********Successful Tests**********" 
cat success.txt
echo "*************************************"
echo "***********Failed Tests**************" 
cat failed.txt

echo "***********Summary******************"
echo "Passed = "`wc -l success.txt`", Failed = "`wc -l failed.txt`

# number of failures is always limited, and when you add
# failed tests you have to bump this up.

# Known $NFAIL failures
# ./tests/exprs/arraysum.prog
# ./tests/exprs/condtest.prog
# ./tests/exprs/dim2d_array.prog
# ./tests/exprs/ifelseif.prog
# badlex.n
# temple.n
# solo_return.n
# boolf.n
# nonexistent_file.n
# eval1.n
# yinyang.n -- fails b/c of no X-window
NFAIL=13 #11/28/15
TOTFAIL=`wc -l failed.txt | cut -d'f' -f1`
echo "from sys import exit; ( $TOTFAIL <=  $NFAIL ) and exit(0) or exit(255)" | python
if [ $?  -eq 0 ]
then
   echo "########## Expected failures" | tee -a dump_file
   exitcode=0 # success
else
   echo "Expecting $NFAIL failures, but found $TOTFAIL failures" | tee -a dump_file
   echo "Too few/many failures; some negative tests may have failed" | tee -a dump_file
   echo "" | tee -a dump_file
   echo "######### LIST OF FAILED FILES ##############" | tee -a dump_file
   cat failed.txt | tee -a dump_file
   echo " " | tee -a dump_file
   exitcode=255 #failed failures != $NFAIL
   exit $exitcode
fi

# cleanup
rm failed.txt
rm success.txt
exit $exitcode
