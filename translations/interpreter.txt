./ezhil/Interpreter.py:    return u"(C) 2007-2015 Muthiah Annamalai"
./ezhil/Interpreter.py:    return u"Ezhil language, version %g, was created by Muthiah Annamalai in 2007-2008, and actively maintained in 2015."%(ezhil_version())
./ezhil/Interpreter.py:    return u"Licensed under GPL Version 3"
./ezhil/Interpreter.py:       raise Exception("getitem - too-few arguments, 2 or 3 arguments expected")
./ezhil/Interpreter.py:            raise KeyError(u"Dictionary is getting clobbered; key '"+key+"' already present '%s'"%unicode(self.get(key)))
./ezhil/Interpreter.py:        parse_eval.call_stack.append("__tmptop__")
./ezhil/Interpreter.py:    if args[0] == u"begin":
./ezhil/Interpreter.py:        raise RuntimeException(u"profile begin should be called before other profile commands like end, results etc")
./ezhil/Interpreter.py:    if args[0] == u"end":
./ezhil/Interpreter.py:    if args[0] == u"results":
./ezhil/Interpreter.py:    raise RuntimeException(u"profile command used with unknown argument %s"%args[0])
./ezhil/Interpreter.py:        raise RuntimeException(u"ezhil_execute: missing filename argument")
./ezhil/Interpreter.py:        parse_eval.call_stack.append("__evaluate__")
./ezhil/Interpreter.py:    """ when you add new language feature, add a AST class 
./ezhil/Interpreter.py:    and its evaluate methods. Also add a parser method """
./ezhil/Interpreter.py:        """ reset lexer and parser """
./ezhil/Interpreter.py:        """ change the parser to your-cool-language using
./ezhil/Interpreter.py:         a lambda function parser_ctor the constructor """
./ezhil/Interpreter.py:        print(u"######### Builtin Function ########")
./ezhil/Interpreter.py:                print(u"%03d> %s"%(pos,unicode(fcn)))
./ezhil/Interpreter.py:        print(u"######### Functions - Library + User defined - ########")
./ezhil/Interpreter.py:            print(u"%03d> %s"%(pos,unicode(fcn)))
./ezhil/Interpreter.py:        """ an internal method to reduce repetition """
./ezhil/Interpreter.py:            self.dbg_msg("adding: "+b);
./ezhil/Interpreter.py:            self.dbg_msg("skipping: "+b);
./ezhil/Interpreter.py:        """ we dont know the arity of these functions,
./ezhil/Interpreter.py:        still add them to the builtin_map """
./ezhil/Interpreter.py:            if PYTHON3 and b == u"replace":
./ezhil/Interpreter.py:            print(u"WARNING : cannot open file %s with exception %s",args[0],str(e))
./ezhil/Interpreter.py:            print(u"WARNING: file_close failed with exception %s"%str(e))
./ezhil/Interpreter.py:            print(u"\nTo exit the program type : exit or press CTRL + D on your keyboard")
./ezhil/Interpreter.py:            return String("")
./ezhil/Interpreter.py:            print(u"\nTo exit the program type : exit or press CTRL + D on your keyboard")
./ezhil/Interpreter.py:        """ populate with the builtin functions"""
./ezhil/Interpreter.py:                print(u"Name Error:",unicode(ie))
./ezhil/Interpreter.py:        self.builtin_map['__getitem__']=BlindBuiltins(ezhil_getitem,"__getitem__")
./ezhil/Interpreter.py:        self.builtin_map['__setitem__']=BuiltinFunction(ezhil_setitem,"__setitem__",3)
./ezhil/Interpreter.py:        self.builtin_map["file_open"]=BlindBuiltins(Interpreter.file_open,"file_open")
./ezhil/Interpreter.py:        self.builtin_map["file_close"]=BuiltinFunction(Interpreter.file_close,"file_close")
./ezhil/Interpreter.py:        self.builtin_map["file_read"]=BuiltinFunction(Interpreter.file_read,"file_read")
./ezhil/Interpreter.py:        self.builtin_map["file_readlines"]=BuiltinFunction(Interpreter.file_readlines,"file_readlines")
./ezhil/Interpreter.py:        self.builtin_map["file_write"]=BuiltinFunction(Interpreter.file_write,"file_write",2)
./ezhil/Interpreter.py:        self.builtin_map["file_writelines"]=BuiltinFunction(Interpreter.file_writelines,"file_writelines",2)
./ezhil/Interpreter.py:        self.builtin_map["input"]=BuiltinFunction(Interpreter.INPUT,"input")
./ezhil/Interpreter.py:        self.builtin_map["raw_input"]=BuiltinFunction(Interpreter.RAWINPUT,"raw_input")
./ezhil/Interpreter.py:        self.builtin_map["assert"]=BuiltinFunction(Interpreter.ezhil_assert,"assert")
./ezhil/Interpreter.py:        self.builtin_map["str"]=BuiltinFunction(str,"str")
./ezhil/Interpreter.py:        self.builtin_map["sys_platform"]=BuiltinFunction(lambda : sys.platform,"sys_platform",padic=0)
./ezhil/Interpreter.py:        self.builtin_map["sleep"]=BuiltinFunction(ezhil_sleep,"sleep")
./ezhil/Interpreter.py:        self.builtin_map["pause"]=BlindBuiltins(Interpreter.ezhil_pause,"pause")
./ezhil/Interpreter.py:        self.add_builtin("date_time",ezhil_date_time,nargin=0,ta_alias=u"தேதி_நேரம்")
./ezhil/Interpreter.py:        self.add_builtin("time",time.time,nargin=0,ta_alias=u"நேரம்")
./ezhil/Interpreter.py:        self.add_builtin("ctime",time.ctime,nargin=1,ta_alias=u"cநேரம்")
./ezhil/Interpreter.py:        self.add_builtin("clock",time.time,nargin=0)
./ezhil/Interpreter.py:        self.add_builtin("islist",ezhil_islist,nargin=1,ta_alias=u"பட்டியலா")
./ezhil/Interpreter.py:        self.add_builtin("isnumber",ezhil_isnumber,nargin=1,ta_alias=u"எண்ணா")    
./ezhil/Interpreter.py:        self.builtin_map["choice"]=BlindBuiltins(random.choice,"choice",self.debug,aslist)
./ezhil/Interpreter.py:        self.builtin_map["random"]=BuiltinFunction(random.random,"random",0)
./ezhil/Interpreter.py:        self.builtin_map["seed"]=BuiltinFunction(random.seed,"seed")
./ezhil/Interpreter.py:        self.builtin_map["randint"]=BuiltinFunction(random.randint,"randint",2)
./ezhil/Interpreter.py:        self.builtin_map["acos"]=BuiltinFunction(acos,"acos")
./ezhil/Interpreter.py:        self.builtin_map["asin"]=BuiltinFunction(asin,"asin")
./ezhil/Interpreter.py:        self.builtin_map["atan"]=BuiltinFunction(atan,"atan")
./ezhil/Interpreter.py:        self.builtin_map["atan2"]=BuiltinFunction(atan2,"atan2")
./ezhil/Interpreter.py:        self.builtin_map["ceil"]=BuiltinFunction(ceil,"ceil")
./ezhil/Interpreter.py:        self.builtin_map["cos"]=BuiltinFunction(cos,"cos")
./ezhil/Interpreter.py:        self.builtin_map["cosh"]=BuiltinFunction(cosh,"cosh")
./ezhil/Interpreter.py:        self.builtin_map["degrees"]=BuiltinFunction(degrees,"degrees")
./ezhil/Interpreter.py:        self.builtin_map["e"]=BuiltinFunction(lambda : e,"e",0)
./ezhil/Interpreter.py:        self.builtin_map["exp"]=BuiltinFunction(exp,"exp")
./ezhil/Interpreter.py:        self.builtin_map["fabs"]=BuiltinFunction(fabs,"fabs")
./ezhil/Interpreter.py:        self.builtin_map["floor"]=BuiltinFunction(floor,"floor")
./ezhil/Interpreter.py:        self.builtin_map["fmod"]=BuiltinFunction(fmod,"fmod",2)
./ezhil/Interpreter.py:        self.builtin_map["frexp"]=BuiltinFunction(frexp,"frexp")
./ezhil/Interpreter.py:        self.builtin_map["hypot"]=BuiltinFunction(hypot,"hypot",2)
./ezhil/Interpreter.py:        self.builtin_map["ldexp"]=BuiltinFunction(ldexp,"ldexp")
./ezhil/Interpreter.py:        self.builtin_map["log"]=BuiltinFunction(log,"log")
./ezhil/Interpreter.py:        self.builtin_map["log10"]=BuiltinFunction(log10,"log10")
./ezhil/Interpreter.py:        self.builtin_map["modf"]=BuiltinFunction(modf,"modf",2)
./ezhil/Interpreter.py:        self.builtin_map["pi"]=BuiltinFunction(lambda : pi,"pi",0)
./ezhil/Interpreter.py:        self.builtin_map["pow"]=BuiltinFunction(pow,"pow",2)
./ezhil/Interpreter.py:        self.builtin_map["radians"]=BuiltinFunction(radians,"radians")
./ezhil/Interpreter.py:        self.builtin_map["sin"]=BuiltinFunction(sin,"sin")
./ezhil/Interpreter.py:        self.builtin_map["sinh"]=BuiltinFunction(sinh,"sinh")
./ezhil/Interpreter.py:        self.builtin_map["sqrt"]=BuiltinFunction(sqrt,"sqrt")
./ezhil/Interpreter.py:        self.builtin_map["tan"]=BuiltinFunction(tan,"tan")
./ezhil/Interpreter.py:        self.builtin_map["tanh"]=BuiltinFunction(tanh,"tanh")
./ezhil/Interpreter.py:        self.builtin_map["max"]=BuiltinFunction(max,"max",2)
./ezhil/Interpreter.py:        self.builtin_map["min"]=BuiltinFunction(min,"min",2)
./ezhil/Interpreter.py:        #self.builtin_map["exit"]=BuiltinFunction(min,"exit",1)
./ezhil/Interpreter.py:                    turtlefcn = u"turtle_"+vv;
./ezhil/Interpreter.py:                print(u"Cannot Import EZTurtle module; ignoring for now")
./ezhil/Interpreter.py:        self.builtin_map["find"] = BuiltinFunction(string.find,"find",2)
./ezhil/Interpreter.py:            self.builtin_map["atof"] = BuiltinFunction(string.atof,"atof",1)
./ezhil/Interpreter.py:            self.builtin_map["atof_error"] = BuiltinFunction(string.atof_error,"atof_error",1)
./ezhil/Interpreter.py:            self.builtin_map["atoi"] = BuiltinFunction(string.atoi,"atoi",1)
./ezhil/Interpreter.py:            self.builtin_map["atoi_error"] = BuiltinFunction(string.atoi_error,"atoi_error",1)
./ezhil/Interpreter.py:            self.builtin_map["atol"] = BuiltinFunction(string.atol,"atol",1)
./ezhil/Interpreter.py:            self.builtin_map["atol_error"] = BuiltinFunction(string.atol_error,"atol_error",1)
./ezhil/Interpreter.py:            self.builtin_map["capitalize"] = BuiltinFunction(string.capitalize,"capitalize",1)
./ezhil/Interpreter.py:            self.builtin_map["capwords"] = BuiltinFunction(string.capwords,"capwords",1)
./ezhil/Interpreter.py:            self.builtin_map["center"] = BuiltinFunction(string.center,"center",1)
./ezhil/Interpreter.py:            self.builtin_map["count_string"] = BuiltinFunction(string.count,"count",1)
./ezhil/Interpreter.py:            self.builtin_map["expandtabs"] = BuiltinFunction(string.expandtabs,"expandtabs",1)
./ezhil/Interpreter.py:        self.builtin_map["index_string"] = BuiltinFunction(string.index,"index",2)
./ezhil/Interpreter.py:            self.builtin_map["index_error"] = BuiltinFunction(string.index_error,"index_error",1)
./ezhil/Interpreter.py:        self.builtin_map["join"] = BuiltinFunction(str.join,"join",1)
./ezhil/Interpreter.py:            self.builtin_map["joinfields"] = BuiltinFunction(string.joinfields,"joinfields",1)
./ezhil/Interpreter.py:        self.builtin_map["ljust"] = BuiltinFunction(string.ljust,"ljust",1)
./ezhil/Interpreter.py:        self.builtin_map["lower"] = BuiltinFunction(string.lower,"lower",1)
./ezhil/Interpreter.py:        self.builtin_map["lstrip"] = BuiltinFunction(string.lstrip,"lstrip",1)
./ezhil/Interpreter.py:            self.builtin_map["maketrans"] = BuiltinFunction(string.maketrans,"maketrans",1)
./ezhil/Interpreter.py:        self.builtin_map["replace"] = BuiltinFunction(string.replace,"replace",3)
./ezhil/Interpreter.py:        self.builtin_map["rfind"] = BuiltinFunction(string.rfind,"rfind",2)
./ezhil/Interpreter.py:        self.builtin_map["rindex"] = BuiltinFunction(string.rindex,"rindex",1)
./ezhil/Interpreter.py:        self.builtin_map["rjust"] = BuiltinFunction(string.rjust,"rjust",1)
./ezhil/Interpreter.py:        self.builtin_map["rsplit"] = BuiltinFunction(string.rsplit,"rsplit",1)
./ezhil/Interpreter.py:        self.builtin_map["rstrip"] = BuiltinFunction(string.rstrip,"rstrip",1)
./ezhil/Interpreter.py:        self.builtin_map["split"] = BuiltinFunction(string.split,"split",2)
./ezhil/Interpreter.py:            self.builtin_map["splitfields"] = BuiltinFunction(string.splitfields,"splitfields",1)
./ezhil/Interpreter.py:        self.builtin_map["strip"] = BuiltinFunction(string.strip,"strip",1)
./ezhil/Interpreter.py:        self.builtin_map["swapcase"] = BuiltinFunction(str.swapcase,"swapcase",1)
./ezhil/Interpreter.py:        self.builtin_map["translate"] = BuiltinFunction(str.translate,"translate",1)
./ezhil/Interpreter.py:        self.builtin_map["upper"] = BuiltinFunction(str.upper,"upper",1)
./ezhil/Interpreter.py:        self.builtin_map["zfill"] = BuiltinFunction(str.zfill,"zfill",2)
./ezhil/Interpreter.py:        self.builtin_map["append"] = BuiltinFunction(list.append,"append",2)
./ezhil/Interpreter.py:        self.builtin_map["insert"] = BuiltinFunction(list.insert,"insert",3)
./ezhil/Interpreter.py:        self.builtin_map["index"] = BuiltinFunction(list.index,"index",2)
./ezhil/Interpreter.py:        self.builtin_map["list"] = BuiltinFunction(list,"list",0)
./ezhil/Interpreter.py:        self.builtin_map["pop"] = BuiltinFunction(list.pop,"pop",1)
./ezhil/Interpreter.py:        #    self.builtin_map["sort"] = BuiltinFunction(lambda x: sorted(x),"sort",1)
./ezhil/Interpreter.py:        self.builtin_map["sort"] = BuiltinFunction(list.sort,"sort",1)
./ezhil/Interpreter.py:        self.builtin_map["count"]= BuiltinFunction(list.count,"count",2)
./ezhil/Interpreter.py:        self.builtin_map["extend"]= BuiltinFunction(list.extend,"extend",2)
./ezhil/Interpreter.py:        self.builtin_map["reverse"]= BuiltinFunction(Interpreter.ezhil_reverse,"reverse",1)
./ezhil/Interpreter.py:        self.builtin_map["pop_list"] = BuiltinFunction(list.pop,"pop",1)
./ezhil/Interpreter.py:        self.builtin_map["clear"]= BuiltinFunction(dict.clear,"clear",1)
./ezhil/Interpreter.py:        self.builtin_map["copy"]= BuiltinFunction(dict.copy,"copy",1)
./ezhil/Interpreter.py:        self.builtin_map["fromkeys"]= BuiltinFunction(dict.fromkeys,"fromkeys",1)
./ezhil/Interpreter.py:        self.builtin_map["items"]= BuiltinFunction(dict.items,"items",1)
./ezhil/Interpreter.py:            self.builtin_map["has_key"]= BuiltinFunction(dict.has_key,"has_key",1)
./ezhil/Interpreter.py:            self.builtin_map["iteritems"]= BuiltinFunction(dict.iteritems,"iteritems",1)
./ezhil/Interpreter.py:            self.builtin_map["iterkeys"]= BuiltinFunction(dict.iterkeys,"iterkeys",1)
./ezhil/Interpreter.py:            self.builtin_map["itervalues"]= BuiltinFunction(dict.itervalues,"itervalues",1)
./ezhil/Interpreter.py:            self.builtin_map["pop_dict"]= BuiltinFunction(dict.pop,"pop",1)
./ezhil/Interpreter.py:            self.builtin_map["popitem"]= BuiltinFunction(dict.popitem,"popitem",1)
./ezhil/Interpreter.py:            self.builtin_map["setdefault"]= BuiltinFunction(dict.setdefault,"setdefault",1)
./ezhil/Interpreter.py:            self.builtin_map["keys"]= BuiltinFunction(lambda x: list(dict.keys(x)),"keys",1)
./ezhil/Interpreter.py:            self.builtin_map["values"]= BuiltinFunction(lambda x: list(dict.values(x)),"values",1)
./ezhil/Interpreter.py:            self.builtin_map["keys"]= BuiltinFunction(dict.keys,"keys",1)
./ezhil/Interpreter.py:            self.builtin_map["values"]= BuiltinFunction(dict.values,"values",1)
./ezhil/Interpreter.py:        self.builtin_map["update"]= BuiltinFunction(dict.update,"update",1)
./ezhil/Interpreter.py:        self.add_builtin("get_tamil_letters",tamil.utf8.get_letters,nargin=1,ta_alias=u"தமிழ்_எழுத்துக்கள்")
./ezhil/Interpreter.py:        self.add_builtin(u"த",tamil.utf8.get_letters,nargin=1)
./ezhil/Interpreter.py:        self.add_builtin("tamil_length",ezhil_tamil_length,nargin=1,ta_alias=u"தநீளம்")     
./ezhil/Interpreter.py:        self.add_builtin("tamil_letters",lambda :  tamil.utf8.tamil_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"தமிழ்எழுத்து")
./ezhil/Interpreter.py:        self.add_builtin("tamil_uyir",lambda :  tamil.utf8.uyir_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"உயிர்எழுத்து")
./ezhil/Interpreter.py:        self.add_builtin("tamil_mei",lambda: tamil.utf8.mei_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"மெய்எழுத்து") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_kuril",lambda: tamil.utf8.kuril_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"குரில்எழுத்து") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_nedil",lambda: tamil.utf8.nedil_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"நேடில்எழுத்து") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_vallinam",lambda: tamil.utf8.vallinam_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"வல்லினம்எழுத்து") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_mellinam",lambda: tamil.utf8.mellinam_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"மெல்லினம்") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_idayinam",lambda: tamil.utf8.idayinam_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"இடைனம்எழுத்து") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_agaram",lambda: tamil.utf8.agaram_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"அகரம்எழுத்து") 
./ezhil/Interpreter.py:        self.add_builtin("tamil_uyirmei",lambda: tamil.utf8.uyirmei_letters,
./ezhil/Interpreter.py:                         nargin=0,ta_alias=u"உயிர்மெய்எழுத்து")
./ezhil/Interpreter.py:        self.add_builtin("tamil_istamil_prefix",tamil.utf8.istamil_prefix,
./ezhil/Interpreter.py:        self.add_builtin("tamil_all_tamil", tamil.utf8.all_tamil,
./ezhil/Interpreter.py:                         nargin=1,ta_alias=u"தனித்தமிழா")
./ezhil/Interpreter.py:        self.add_builtin("tamil_hastamil",tamil.utf8.has_tamil,
./ezhil/Interpreter.py:                         nargin=1,ta_alias=u"தமிழ்கொண்டதா")
./ezhil/Interpreter.py:        self.add_builtin("tamil_reverse_word",tamil.utf8.reverse_word,
./ezhil/Interpreter.py:                         nargin=1,ta_alias=u"அந்தாதிமாற்று")
./ezhil/Interpreter.py:        if (self.debug): print("deleting Interpreter...")
./ezhil/Interpreter.py:        rval =  u"[Interpreter: "
./ezhil/Interpreter.py:        rval = rval + u"[Functions["
./ezhil/Interpreter.py:            rval = rval + u"\n "+ unicode(self.function_map[k]) 
./ezhil/Interpreter.py:        rval = rval +u"]] "+ unicode(self.ast) +u"]\n"
./ezhil/Interpreter.py:        """ parser routine """
./ezhil/Interpreter.py:                self.env.call_function("__toplevel__") ##some context
./ezhil/Interpreter.py:            print("ERROR : %s"%str(e))
./ezhil/Interpreter.py:        """ @lexer is language lexical analyzer
./ezhil/Interpreter.py:            @debug the boolean """
./ezhil/Interpreter.py:        self.banner = u"""எழில் - ஒரு தமிழ் நிரலாக்க மொழி (Fri Nov 20 08:00:00 EST 2015)
./ezhil/Interpreter.py:Type "help", "copyright", "credits" or "license" for more information."""%ezhil_version()
./ezhil/Interpreter.py:        arg,cmd = u"",u""
./ezhil/Interpreter.py:            line = line.decode("utf-8")
./ezhil/Interpreter.py:        if line in [u"exit",u"help",u"EOF",u"copyright",u"credits",u"license"]:
./ezhil/Interpreter.py:            line = line+u"()"
./ezhil/Interpreter.py:        self.prompt = u"%s %d>> "%(self.lang,self.line_no)
./ezhil/Interpreter.py:        print(u"%s"%(self.banner))
./ezhil/Interpreter.py:        """ REPL is carried out primarily through this callback from the looping construct """
./ezhil/Interpreter.py:        if ( self.debug ): print("evaluating line", line)
./ezhil/Interpreter.py:                if TKN.val in ["(", "[", "{"]:
./ezhil/Interpreter.py:                elif TKN.val in [")","]","}"]:
./ezhil/Interpreter.py:                        if ( self.debug ): print("matched braces..")
./ezhil/Interpreter.py:                    if ( self.debug ): print("nota brace token",TKN.val)
./ezhil/Interpreter.py:                    print ("MIsmatched braces")
./ezhil/Interpreter.py:                if ( self.debug ): print ("Braces matched")
./ezhil/Interpreter.py:                print(u"*"*60);  
./ezhil/Interpreter.py:            if ( self.debug ): print( u"return value", unicode(rval) )
./ezhil/Interpreter.py:            print(u"Exception in code, at line %d,  \"%s\" \n >>>>>>> %s "%(self.line_no-1,line,unicode(excep)))
./ezhil/Interpreter.py:        print(u"\n")
./ezhil/Interpreter.py:        if ( self.lang == u"எழில்"):
./ezhil/Interpreter.py:            print(u"******* வணக்கம்! பின்னர் உங்களை  பார்க்கலாம். *******") 
./ezhil/Interpreter.py:            print(u"******* Goodbye! Now have a nice day *******")
./ezhil/Interpreter.py:    parser.add_argument(u"files",nargs='*',default=[])
./ezhil/Interpreter.py:    parser.add_argument(u"-debug",action=u"store_true",
./ezhil/Interpreter.py:                        help=u"enable debugging information on screen")
./ezhil/Interpreter.py:    parser.add_argument(u"-tamilencoding",default=u"UTF-8",
./ezhil/Interpreter.py:                        help=u"option to specify other file encodings; supported  encodings are TSCII, and UTF-8")
./ezhil/Interpreter.py:    parser.add_argument(u"-profile",action=u"store_true",
./ezhil/Interpreter.py:                        help=u"profile the input file(s)")
./ezhil/Interpreter.py:    parser.add_argument(u"-stdin",action=u"store_true",
./ezhil/Interpreter.py:                        help=u"read input from the standard input")
./ezhil/Interpreter.py:    parser.add_argument(u"-stacksize",
./ezhil/Interpreter.py:                        help=u"default stack size for the Interpreter")
./ezhil/Interpreter.py:            args.files[itr] = args.files[itr].decode("utf-8")
./ezhil/Interpreter.py:        print(u"===>",args.tamilencoding,u" | ===> files: ".join(args.files))
./ezhil/Interpreter.py:    if not(args.tamilencoding in ["utf-8","tscii","TSCII","UTF-8"]):
./ezhil/Interpreter.py:        print(u"ERROR: Unsupported encoding %s; use values TSCII or UTF-8, or see Help"%args.tamilencoding)
./ezhil/Interpreter.py:        print(u"ERROR: Cannot run profiling and input from console")
./ezhil/Interpreter.py:        print(u"###### chosen encoding => ",encoding,stacksize)
